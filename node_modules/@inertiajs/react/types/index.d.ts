export declare const progress: {
    hideCount: number;
    start(): void;
    reveal(force?: boolean): void;
    hide(): void;
    set(status: number): void;
    finish(): void;
    reset(): void;
    remove(): void;
    isStarted(): boolean;
    getStatus(): number | null;
};
export declare const router: import("@inertiajs/core").Router;
export { default as createInertiaApp } from './createInertiaApp';
export { default as Deferred } from './Deferred';
export { default as Form } from './Form';
export { default as Head } from './Head';
export { default as InfiniteScroll } from './InfiniteScroll';
export { InertiaLinkProps, default as Link } from './Link';
export { InertiaFormProps, SetDataAction, SetDataByKeyValuePair, SetDataByMethod, SetDataByObject, default as useForm, } from './useForm';
export { default as usePage } from './usePage';
export { default as usePoll } from './usePoll';
export { default as usePrefetch } from './usePrefetch';
export { default as useRemember } from './useRemember';
export { default as WhenVisible } from './WhenVisible';
